// Generated by CoffeeScript 1.3.3

/*!
 * Copyright (c) 2012 Andrew Volkov <hello@vol4ok.net>
*/


(function() {
  var $, cache, ck, hogan, read, render,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $ = {};

  __extends($, require('path'));

  __extends($, require('fs'));

  __extends($, require('util'));

  hogan = require('hogan.js');

  ck = require('./coffeekup');

  cache = {};

  read = function(path, options) {
    var ckExt, str, _ref;
    ckExt = (_ref = options.ck) != null ? _ref : '.ck';
    str = cache[path];
    if (options.cache && str) {
      return str;
    }
    str = $.readFileSync(path, 'utf8');
    if ($.extname(path) === ckExt) {
      str = ck.render(str);
    }
    if (options.cache) {
      cache[path] = str;
    }
    return str;
  };

  render = function(path, opt) {
    if (opt == null) {
      opt = {};
    }
    if (opt.asString == null) {
      opt.asString = true;
    }
    try {
      return hogan.compile(read(path, opt), opt);
    } catch (err) {
      return null;
    }
  };

  module.exports = render;

}).call(this);
